// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`styl props polymorphic > ScrollView 1`] = `
<RCTScrollView
  scrollEnabled={true}
  style={
    Array [
      Object {
        "color": "blue",
      },
      Object {},
    ]
  }
>
  <View>
    <Text>
      TouchableWithoutFeedback
    </Text>
  </View>
</RCTScrollView>
`;

exports[`styl props polymorphic > TouchableWithoutFeedback 1`] = `
<Text
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  TouchableWithoutFeedback
</Text>
`;

exports[`styl props renders custom props 1`] = `
<Text
  color="blue"
  style={
    Array [
      Object {
        "color": "blue",
      },
      Object {},
    ]
  }
/>
`;

exports[`styl render renders a type of original component 1`] = `
<Text
  style={
    Array [
      Object {},
      Object {},
    ]
  }
/>
`;

exports[`styl render renders correctly 1`] = `
<Text
  style={
    Array [
      Object {},
      Object {},
    ]
  }
/>
`;

exports[`styl style accepts inline style 1`] = `
<Text
  style={
    Array [
      Object {},
      Object {
        "color": "blue",
      },
    ]
  }
/>
`;

exports[`styl style empty inline style does not remove the original style 1`] = `
<Text
  style={
    Array [
      Object {
        "color": "blue",
      },
      Object {},
    ]
  }
/>
`;

exports[`styl style its inline style override the original style 1`] = `
<Text
  style={
    Array [
      Object {
        "color": "red",
      },
      Object {
        "color": "blue",
      },
    ]
  }
/>
`;

exports[`styl theme/provider gets the color from nested theme 1`] = `
<Text
  style={
    Array [
      Object {
        "color": "blue",
      },
      Object {},
    ]
  }
/>
`;

exports[`styl theme/provider gets the color from theme 1`] = `
<Text
  style={
    Array [
      Object {
        "color": "blue",
      },
      Object {},
    ]
  }
/>
`;
